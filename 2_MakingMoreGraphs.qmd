---
title: "Making More Graphs"
format: html
editor: visual
---

## Last week's graph
```{r}
library(tidyverse)

counts <- c(7,2)
options <- c("Best Parking Spot", "Traffic Lights")

wouldyourather1 <- data.frame(options, counts)

ggplot(wouldyourather1, aes(x = options, y = counts)) +
  geom_col() + 
  labs(title = "Would You Rather Opener", 
       subtitle= "Week 1",
       x = "Options Given", y = "Counts of Votes")
```

## Your turn w/week 2 Opener!
```{r}
counts2 <- c()
options2 <- c()

wouldyourather2 <- data.frame(options2, counts2)

ggplot(_________, aes(x = _________, y = ________)) +
  geom_col() + 
  labs(title = "__________", 
       subtitle= "_________",
       x = "_________", y = "_________")
```

This week will focus on catching up on Chapter 2, doing some basic plotting, and ideally experimenting a little as well. Here are some examples to get you started.

## Review

Remember, in R, everything has a *name* and everything is an *object*. You do things to named objects with *functions* (which are themselves objects!). And you create an object by *assigning* a thing to a name.

*Assignment* is the act of attaching a thing to a name. It is represented by `<-` or `=` and you can read it as "gets" or "is". Type it by with the `<` and then the `-` key. Better, there is a shortcut: on Mac OS it is `Option -` or Option and the `-` (minus or hyphen) key together. On Windows it's `Alt -`.

You do things with *functions*. Functions usually *take input*, *perform actions*, and then *return output*.

```{r}
# Calculate the mean of my_numbers with the mean() function
my_numbers <- c(1,5,7,2,16,31,3,6,9)
mean(x = my_numbers)
```

The instructions you can give a function are its *arguments*. Here, `x` is saying "this is the thing I want you to take the mean of".

If you provide arguments in the "right" order (the order the function expects), you don't have to name them.

```{r}
mean(my_numbers)
```

To draw a graph in ggplot requires two kinds of statements: one saying what the data is and what relationship we want to plot, and the second saying what kind of plot we want. The first one is done by the `ggplot()` function (NOTE: mpg is a basic made-up dataset that is included with all copies of R).

```{r}
ggplot(data = mpg, 
       mapping = aes(x = displ, y = hwy))
```

You can see that by itself it doesn't do anything.

But if we add a function saying what kind of plot, we get a result:

```{r}
ggplot(data = mpg, 
       mapping = aes(x = displ, y = hwy)) +
  geom_point()
```

The `data` argument says which table of data to use. The `mapping` argument, which is done using the "aesthetic" function `aes()` tells ggplot which visual elements on the plot will represent which columns or variables in the data.

```{r}
# The gapminder data
library(gapminder)
view(gapminder)

```

## Types of Graphs (our turn)

For each plot below, discuss in your small group:
1) What is happening in this graph?
2) When would I use this type of a graph?

### Histogram

A histogram is a summary of the distribution of a single variable. It shows how many times each value within certain 'bins' appear in the data.

```{r}
ggplot(data = gapminder, 
       mapping = aes(x = lifeExp)) +
  geom_histogram() +
  labs(title="Frequency of Average Life Expectancy in Gapminder Data")
```

1) What is happening in this graph?
2) When would I use this type of a graph?

### Scatter Plot

A scatterplot shows how two variables co-vary:

```{r}
ggplot(data = gapminder, 
       mapping = aes(x = gdpPercap, y = lifeExp)) +
  geom_point() +
  labs(title="Life Expectancy vs. GDP per Capita in Gapminder Data")
```

1) What is happening in this graph?
2) When would I use this type of a graph?

### Box Plot

A boxplot is another way of showing the distribution of a single variable. It draws from the same data as the histogram, above. It splits the data into quartiles - that is, the box is the middle 50% of the data, with the line in the middle being the median. The whiskers show the range of the data from the minimum to the maximum, and the points are outliers.

```{r}
ggplot(data = gapminder, 
       mapping = aes(y = lifeExp)) +
  geom_boxplot() +
  labs(title="Distribution of Life Expectancy in Gapminder Data")
```

1) What is happening in this graph?
2) When would I use this type of a graph?

Boxplots are much more useful if we compare several of them:

```{r}
ggplot(data = gapminder, 
       mapping = aes(x = continent, y = lifeExp)) +
  geom_boxplot() 
```
